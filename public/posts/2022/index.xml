<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022 on fletchers-cloud-blog</title>
    <link>http://localhost:1313/posts/2022/</link>
    <description>Recent content in 2022 on fletchers-cloud-blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Oct 2022 13:59:06 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/2022/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Azure Resource Graph and Tags to lock items in Azure</title>
      <link>http://localhost:1313/posts/2022/using-arg-tolock-resources/</link>
      <pubDate>Mon, 03 Oct 2022 13:59:06 +0100</pubDate>
      <guid>http://localhost:1313/posts/2022/using-arg-tolock-resources/</guid>
      <description>&lt;h2 id=&#34;what-are-we-doing&#34;&gt;What are we doing?&lt;/h2&gt;&#xA;&lt;p&gt;We are going to use Azure Resource Graph to find items with a specific tag, in this case &lt;em&gt;{&amp;ldquo;toBeLocked&amp;rdquo;=&amp;ldquo;Yes&amp;rdquo;}&lt;/em&gt; and then place a resource lock on them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;constraints--limitations&#34;&gt;Constraints / limitations&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Use Azure Resource Graph to perform the search. Very fast and gives you a new way to interface with Azure Resources.&lt;/li&gt;&#xA;&lt;li&gt;As part of this post, I am giving samples below to create items, you could use these for testing. Please test and make sure with production environment.&lt;/li&gt;&#xA;&lt;li&gt;You are using an account that can create locks and potentially remove if needed during the testing.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;lets-build-this&#34;&gt;Lets build this&lt;/h2&gt;&#xA;&lt;h3 id=&#34;steps&#34;&gt;Steps&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create sample items&lt;/li&gt;&#xA;&lt;li&gt;Build Azure Resource Graph Queries&lt;/li&gt;&#xA;&lt;li&gt;Getting items from the query programmatically&lt;/li&gt;&#xA;&lt;li&gt;Adding locks&lt;/li&gt;&#xA;&lt;li&gt;Result&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;create-sample-items-to-lock&#34;&gt;Create sample items to lock&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## create resource group&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$rgName = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;toberesourcelocked&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$rgLocation = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;northeurope&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$rg = new-azresourcegroup -name $rgname -location $rgLocation&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## create items&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$guid = New-Guid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$saName = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sa&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$saSuffix = $guid.ToString().Split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]+$guid.ToString().Split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$saName = (($saName.replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))+$saSuffix)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New-AzStorageAccount -ResourceGroupName $rgName -Name $saName -Location $rgLocation -AccountType Standard_LRS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## create tag(s)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$tags = @{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;toBeLocked&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## get items in Resource Group and tag them&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$items = Get-AzResource -ResourceGroupName $rgName&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($item &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; $items)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Update-AzTag -ResourceId $item.ResourceId -Tag $tags -Operation Replace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## update resource group with tag(s)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Update-AzTag -ResourceId $rg.ResourceId -Tag $tags -Operation Replace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;build-azure-resource-graph-queries&#34;&gt;Build Azure Resource Graph Queries&lt;/h3&gt;&#xA;&lt;h4 id=&#34;including-resource-groups&#34;&gt;Including Resource Groups&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-azurecli&#34; data-lang=&#34;azurecli&#34;&gt;resourcecontainers&#xD;&#xA;| where type == &amp;#34;microsoft.resources/subscriptions/resourcegroups&amp;#34;&#xD;&#xA;| mv-expand bagexpansion=array tags&#xD;&#xA;| where isnotempty(tags)&#xD;&#xA;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xD;&#xA;| project  name,type,location,subscriptionId,tags&#xD;&#xA;| union (resources &#xD;&#xA;| mv-expand bagexpansion=array tags&#xD;&#xA;| where isnotempty(tags)&#xD;&#xA;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xD;&#xA;| project name,type,location,subscriptionId,tags,id)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;excluding-resource-groups&#34;&gt;Excluding Resource Groups&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-azurecli&#34; data-lang=&#34;azurecli&#34;&gt;Resources&#xD;&#xA;| mv-expand bagexpansion=array tags&#xD;&#xA;| where isnotempty(tags)&#xD;&#xA;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;resource-groups-only&#34;&gt;Resource Groups Only&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-azurecli&#34; data-lang=&#34;azurecli&#34;&gt;ResourceContainers&#xD;&#xA;| where type =~ &amp;#39;microsoft.resources/subscriptions/resourcegroups&amp;#39;&#xD;&#xA;| where tags[&amp;#39;toBeLocked&amp;#39;] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;getting-items-from-the-query-programmatically&#34;&gt;Getting items from the query programmatically&lt;/h3&gt;&#xA;&lt;p&gt;We now have the required queries and you can pick whichever one above suits your needs, I am going to be using &lt;a href=&#34;#including-resource-groups&#34;&gt;Including Resource Groups&lt;/a&gt;. Now we need a way to act against these resources. I am personally quite a fan of &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/&#34;&gt;PowerShell&lt;/a&gt; so I will provide this sample. You can use &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/governance/resource-graph/first-query-powershell#add-the-resource-graph-module&#34;&gt;this&lt;/a&gt; as a base for my example below. When running the query in &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/&#34;&gt;PowerShell&lt;/a&gt;, I find &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_splatting?view=powershell-7.2&#34;&gt;splatting&lt;/a&gt; is easiest for &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/governance/resource-graph/&#34;&gt;Azure Resource Graph&lt;/a&gt; queries&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Arc to SSH into Linux and Windows</title>
      <link>http://localhost:1313/posts/2022/arc-ssh-windows-linux/</link>
      <pubDate>Tue, 27 Sep 2022 08:03:53 +0100</pubDate>
      <guid>http://localhost:1313/posts/2022/arc-ssh-windows-linux/</guid>
      <description>&lt;h2 id=&#34;what-are-we-doing&#34;&gt;What are we doing?&lt;/h2&gt;&#xA;&lt;p&gt;We are going to use Azure Arc to SSH into a Linux (ubuntu 20.04) and a Windows Server (Server 2019) machine and run commands.&lt;/p&gt;&#xA;&lt;h2 id=&#34;constraints--limitations&#34;&gt;Constraints / limitations&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Use only Azure ARC.&lt;/li&gt;&#xA;&lt;li&gt;Use only public endpoints (I have not yet tested this with Private Endpoints) and my VPN is not currently connected to Azure.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;considerations&#34;&gt;Considerations&lt;/h2&gt;&#xA;&lt;p&gt;As of the time of this blog post (27-Sep-2022), the &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/azure-arc/servers/ssh-arc-overview&#34;&gt;Azure Arc SSH&lt;/a&gt; functionality is in preview.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Check Powershell Console Type</title>
      <link>http://localhost:1313/posts/2022/check-powershell-type/</link>
      <pubDate>Wed, 14 Sep 2022 11:14:30 +0100</pubDate>
      <guid>http://localhost:1313/posts/2022/check-powershell-type/</guid>
      <description>&lt;p&gt;I have been working with some Microsoft Hybrid technologies. My specific example here is around &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-arc/vmware-vsphere/overview&#34;&gt;Azure Arc-enabled VMware vSphere&lt;/a&gt; aspects. When running the scripts provided here there is a key aspect.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Do NOT run this in the PowerShell ISE.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Even with this strong recommendation, it is often accidentally used as it is really easy to perform this action with a right click option and this got me to thinking about how can I check this via code?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using SSH Keys with Bicep based Linux VM templates</title>
      <link>http://localhost:1313/posts/2022/bicep-linux-vm-ssh-keys/</link>
      <pubDate>Mon, 20 Jun 2022 08:54:21 +0100</pubDate>
      <guid>http://localhost:1313/posts/2022/bicep-linux-vm-ssh-keys/</guid>
      <description>&lt;p&gt;I this post, I use bicep files for the deployment of Linux VMs AND I add some magic with PowerSehll to allow for the creation or using of existing SSH keys with these VMs.&lt;/p&gt;&#xA;&lt;p&gt;I am a HUGE fan of SSH keys with Linux VMs for obvious reasons. I could just not find a script or scenario that covered this topic in a way that I actually like. I like to show more details and explain.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Openssh and creating SSH Keys with Powershell</title>
      <link>http://localhost:1313/posts/2022/openssh-powershell/</link>
      <pubDate>Mon, 25 Apr 2022 14:27:03 +0100</pubDate>
      <guid>http://localhost:1313/posts/2022/openssh-powershell/</guid>
      <description>&lt;p&gt;In this post I show you my process for creating SSH Keys for Linux Machines.&lt;/p&gt;&#xA;&lt;p&gt;I use a fair amount of Linux in my work career (creating VMs and the like within Azure). Linux VMs are great for testing with, they use SSH and are configured and ready for testing VERY quickly in Azure. I also use a fair amount of Linux in personal life, with &lt;a href=&#34;https://home-assisant.io&#34;&gt;Home assistant&lt;/a&gt; and &lt;a href=&#34;https://plex.tv&#34;&gt;Plex&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I know many people use username and password with Linux environments and there is nothing wrong with this, I simply think that keys are better :smile: . I believe this for a few reasons.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Azure Virtual WAN to connect to Azure VMware Solution</title>
      <link>http://localhost:1313/posts/2022/poc-vwan-avs/</link>
      <pubDate>Mon, 28 Mar 2022 07:27:16 +0100</pubDate>
      <guid>http://localhost:1313/posts/2022/poc-vwan-avs/</guid>
      <description>&lt;h2 id=&#34;how-do-i-connect-my-on-premises-environment-to-avs-in-a-quick-and-simple-way&#34;&gt;How do I connect my on-premises environment to AVS in a quick and simple way?&lt;/h2&gt;&#xA;&lt;p&gt;There are a few patterns available for connecting &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-vmware/introduction&#34;&gt;Azure VMware Solution&lt;/a&gt; to your on-premises network. There is specific guidance for PRODUCTION deployments here &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/cloud-adoption-framework/scenarios/azure-vmware/eslz-network-topology-connectivity&#34;&gt;here&lt;/a&gt;. The option we are talking about here is for a different use case.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Specific use case:&lt;/strong&gt; A &lt;em&gt;&lt;strong&gt;PoC (Proof of Concept)&lt;/strong&gt;&lt;/em&gt; type environment or smaller environments for testing with a plan to grow after the fact.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure VMware Solution: To &#39;Internet Enabled&#39; or not?</title>
      <link>http://localhost:1313/posts/2022/avs-to-internet-able-or-not/</link>
      <pubDate>Thu, 17 Mar 2022 16:06:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022/avs-to-internet-able-or-not/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Guest Post&lt;/strong&gt;&#xA;Author: &lt;a href=&#34;http://localhost:1313/about/robinheringa/&#34;&gt;Robin Heringa&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;What else do I need to know when using Azure VMware Solution (AVS)?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;As you all (probably) know by now Azure VMware Solution is a managed service offered by Microsoft providing a managed VMware vSphere environment to customers. With this offering customers no longer need to worry about hardware maintenance, hardware refresh and software maintenance for the core VMware components (ESXi, vCenter and NSX-T).&lt;/p&gt;&#xA;&lt;p&gt;By default, after initial deployment of Azure VMware Solution, virtual machines do not have the ability to egress to the Internet. One of the options to enable Internet access is to &amp;ldquo;flip&amp;rdquo; the &amp;ldquo;Internet Enabled&amp;rdquo; toggle in the connectivity pane of the management blades in the Azure Portal:&lt;/p&gt;</description>
    </item>
    <item>
      <title>I want to use Azure VMware Solution, what should I know about networking?</title>
      <link>http://localhost:1313/posts/2022/new-to-avs-nomon-networking-1/</link>
      <pubDate>Wed, 09 Mar 2022 16:06:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022/new-to-avs-nomon-networking-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;What else do I need to know when using Azure VMware Solution (AVS)?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Networking Edition&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;I have been working with many customers over the last little while that are looking at Azure VMware Solution (AVS).&lt;/p&gt;&#xA;&lt;p&gt;Often the idea and use case for the customer is correct. There are a few great reasons to use AVS. If you fit within the use cases, you are in for a real treat.&lt;/p&gt;&#xA;&lt;p&gt;Deciding whether or not you are a fit is part of the equation, there is more to this scenario. Let&amp;rsquo;s dive in a bit more.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
