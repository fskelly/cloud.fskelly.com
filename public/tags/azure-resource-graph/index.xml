<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure Resource Graph on fletchers-cloud-blog</title>
    <link>http://localhost:1313/tags/azure-resource-graph/</link>
    <description>Recent content in Azure Resource Graph on fletchers-cloud-blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Oct 2022 13:59:06 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/azure-resource-graph/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Azure Resource Graph and Tags to lock items in Azure</title>
      <link>http://localhost:1313/posts/2022/using-arg-tolock-resources/</link>
      <pubDate>Mon, 03 Oct 2022 13:59:06 +0100</pubDate>
      <guid>http://localhost:1313/posts/2022/using-arg-tolock-resources/</guid>
      <description>&lt;h2 id=&#34;what-are-we-doing&#34;&gt;What are we doing?&lt;/h2&gt;&#xA;&lt;p&gt;We are going to use Azure Resource Graph to find items with a specific tag, in this case &lt;em&gt;{&amp;ldquo;toBeLocked&amp;rdquo;=&amp;ldquo;Yes&amp;rdquo;}&lt;/em&gt; and then place a resource lock on them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;constraints--limitations&#34;&gt;Constraints / limitations&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Use Azure Resource Graph to perform the search. Very fast and gives you a new way to interface with Azure Resources.&lt;/li&gt;&#xA;&lt;li&gt;As part of this post, I am giving samples below to create items, you could use these for testing. Please test and make sure with production environment.&lt;/li&gt;&#xA;&lt;li&gt;You are using an account that can create locks and potentially remove if needed during the testing.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;lets-build-this&#34;&gt;Lets build this&lt;/h2&gt;&#xA;&lt;h3 id=&#34;steps&#34;&gt;Steps&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create sample items&lt;/li&gt;&#xA;&lt;li&gt;Build Azure Resource Graph Queries&lt;/li&gt;&#xA;&lt;li&gt;Getting items from the query programmatically&lt;/li&gt;&#xA;&lt;li&gt;Adding locks&lt;/li&gt;&#xA;&lt;li&gt;Result&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;create-sample-items-to-lock&#34;&gt;Create sample items to lock&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## create resource group&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$rgName = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;toberesourcelocked&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$rgLocation = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;northeurope&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$rg = new-azresourcegroup -name $rgname -location $rgLocation&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## create items&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$guid = New-Guid&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$saName = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sa&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$saSuffix = $guid.ToString().Split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]+$guid.ToString().Split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$saName = (($saName.replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))+$saSuffix)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New-AzStorageAccount -ResourceGroupName $rgName -Name $saName -Location $rgLocation -AccountType Standard_LRS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## create tag(s)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$tags = @{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;toBeLocked&amp;#34;&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## get items in Resource Group and tag them&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$items = Get-AzResource -ResourceGroupName $rgName&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($item &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; $items)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Update-AzTag -ResourceId $item.ResourceId -Tag $tags -Operation Replace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## update resource group with tag(s)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Update-AzTag -ResourceId $rg.ResourceId -Tag $tags -Operation Replace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;build-azure-resource-graph-queries&#34;&gt;Build Azure Resource Graph Queries&lt;/h3&gt;&#xA;&lt;h4 id=&#34;including-resource-groups&#34;&gt;Including Resource Groups&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-azurecli&#34; data-lang=&#34;azurecli&#34;&gt;resourcecontainers&#xD;&#xA;| where type == &amp;#34;microsoft.resources/subscriptions/resourcegroups&amp;#34;&#xD;&#xA;| mv-expand bagexpansion=array tags&#xD;&#xA;| where isnotempty(tags)&#xD;&#xA;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xD;&#xA;| project  name,type,location,subscriptionId,tags&#xD;&#xA;| union (resources &#xD;&#xA;| mv-expand bagexpansion=array tags&#xD;&#xA;| where isnotempty(tags)&#xD;&#xA;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xD;&#xA;| project name,type,location,subscriptionId,tags,id)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;excluding-resource-groups&#34;&gt;Excluding Resource Groups&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-azurecli&#34; data-lang=&#34;azurecli&#34;&gt;Resources&#xD;&#xA;| mv-expand bagexpansion=array tags&#xD;&#xA;| where isnotempty(tags)&#xD;&#xA;| where tags[0] =~ &amp;#39;toBeLocked&amp;#39; and tags[1] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;resource-groups-only&#34;&gt;Resource Groups Only&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-azurecli&#34; data-lang=&#34;azurecli&#34;&gt;ResourceContainers&#xD;&#xA;| where type =~ &amp;#39;microsoft.resources/subscriptions/resourcegroups&amp;#39;&#xD;&#xA;| where tags[&amp;#39;toBeLocked&amp;#39;] =~ &amp;#39;Yes&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;getting-items-from-the-query-programmatically&#34;&gt;Getting items from the query programmatically&lt;/h3&gt;&#xA;&lt;p&gt;We now have the required queries and you can pick whichever one above suits your needs, I am going to be using &lt;a href=&#34;#including-resource-groups&#34;&gt;Including Resource Groups&lt;/a&gt;. Now we need a way to act against these resources. I am personally quite a fan of &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/&#34;&gt;PowerShell&lt;/a&gt; so I will provide this sample. You can use &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/governance/resource-graph/first-query-powershell#add-the-resource-graph-module&#34;&gt;this&lt;/a&gt; as a base for my example below. When running the query in &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/&#34;&gt;PowerShell&lt;/a&gt;, I find &lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_splatting?view=powershell-7.2&#34;&gt;splatting&lt;/a&gt; is easiest for &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/governance/resource-graph/&#34;&gt;Azure Resource Graph&lt;/a&gt; queries&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
